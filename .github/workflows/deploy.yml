name: Deploy PeruJUG Site to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Set permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build and test the application
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better caching
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Cache Quarkus build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-quarkus-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-quarkus
      
      - name: Verify Maven wrapper
        run: |
          chmod +x ./mvnw
          ./mvnw --version
      
      - name: Build with Maven
        run: |
          ./mvnw clean compile
        env:
          # Use GitHub Pages URL for production build
          QUARKUS_ROQ_SITE_URL: ${{ secrets.GITHUB_PAGES_URL || 'https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}' }}
      
      - name: Build static site for production
        run: |
          # Build static site using the static profile
          ./mvnw clean package -Pstatic
        env:
          # Use GitHub Pages URL for production build
          QUARKUS_ROQ_SITE_URL: ${{ secrets.GITHUB_PAGES_URL || 'https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}' }}
      
      - name: Verify static site generation
        run: |
          if [ ! -d "target/site" ]; then
            echo "‚ùå Static site was not generated in target/site"
            exit 1
          fi
          
          echo "‚úÖ Static site generated successfully"
          echo "üìÅ Site contents:"
          ls -la target/site/
          
          # Check for essential files
          if [ ! -f "target/site/index.html" ]; then
            echo "‚ùå index.html not found in generated site"
            exit 1
          fi
          
          echo "‚úÖ Essential files found"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: target/site/
          retention-days: 1

  # Deploy to GitHub Pages
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: site-build
          path: site-files
      
      - name: Verify downloaded artifacts
        run: |
          if [ ! -d "site-files" ]; then
            echo "‚ùå Site files not found"
            exit 1
          fi
          
          echo "‚úÖ Site files downloaded successfully"
          echo "üìÅ Downloaded contents:"
          ls -la site-files/
          
          # Check for essential files
          if [ ! -f "site-files/index.html" ]; then
            echo "‚ùå index.html not found in downloaded files"
            exit 1
          fi
          
          echo "‚úÖ Essential files verified"
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './site-files'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Verify deployment
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üì± Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "‚è±Ô∏è Deployment time: ${{ steps.deployment.outputs.deployment_time }}"